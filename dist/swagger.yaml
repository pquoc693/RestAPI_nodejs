openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/test-swagger/1.0.0
info:
  description: Test APIs document Swagger
  version: "1.0.0"
  title: APIs document Swagger
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: location
    description: Operations about location
paths:
  /data:
    get:
      tags:
        - location
      summary: Get all location
      description: 
      operationId: getLocation
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Location'
          description: 	successful operation

  /data/{id}:
    get:
      tags:
        - location
      summary: Get location by id
      operationId: getLocation
      parameters:
        - name: id
          in: path
          description: id of location
          required: true
          schema:
            type: integer
            minimun: 1  
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: 	successful operation
        '404':
          description: Not found

  /authenticate:
    post:
      summary: Get token
      tags:
        - Authentication
      requestBody:
        description: Object Account
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
          description: 	Authencation done
        



  /api/data-create:
    post:
      
      tags:
        - location
      summary: Create location
      operationId: createLocation
      parameters:
        - name: Authorization 
          in: header
          required: true
          description: Authorization
          schema:
            type: string
            default: ACCESS_TOKEN
      requestBody:
        description: Object location
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationWtId'
      
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          description: 	Created

  /api/data-delete/{id}:
    delete:
      tags:
        - location
      summary: Delete location by id
      operationId: deleteLocation
      parameters:
        - name: id
          in: path
          description: id of location
          required: true
          schema:
            type: integer
        - name: Authorization 
          in: header
          required: true
          description: Authorization
          schema:
            type: string
            default: ACCESS_TOKEN  
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          description: 	successful operation
        '404':
          description: Not found

  /api/data-put/{id}:
    put:
      tags:
        - location
      summary: Edit location
      operationId: editLocation
      requestBody:
        description: Object location
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationWtId'
      parameters:
        - name: id
          in: path
          description: id of location
          required: true
          schema:
            type: integer
        - name: Authorization 
          in: header
          required: true
          description: Authorization
          schema:
            type: string
            default: ACCESS_TOKEN
        
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          description: 	Successful operation
        '404':
          description: Not found

          
components:
  schemas:
    Location:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        images:
          type: string
        snippet:
          type: string
      xml:
        name: Location
    LocationWtId:
      type: object
      properties:
        name:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        images:
          type: string
        snippet:
          type: string
      xml:
        name: Location
    Account:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      xml:
        name: Account
    Token:
      type: object
      properties:
        message:
          type: string
        token:
          type: string

  